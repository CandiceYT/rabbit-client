package com.susion.rabbit.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.susion.rabbit.tracer.entities.RabbitBlockFrameInfo;
import com.susion.rabbit.net.entities.RabbitHttpLogInfo;
import com.susion.rabbit.exception.entities.RabbitExceptionInfo;

import com.susion.rabbit.greendao.RabbitBlockFrameInfoDao;
import com.susion.rabbit.greendao.RabbitHttpLogInfoDao;
import com.susion.rabbit.greendao.RabbitExceptionInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig rabbitBlockFrameInfoDaoConfig;
    private final DaoConfig rabbitHttpLogInfoDaoConfig;
    private final DaoConfig rabbitExceptionInfoDaoConfig;

    private final RabbitBlockFrameInfoDao rabbitBlockFrameInfoDao;
    private final RabbitHttpLogInfoDao rabbitHttpLogInfoDao;
    private final RabbitExceptionInfoDao rabbitExceptionInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        rabbitBlockFrameInfoDaoConfig = daoConfigMap.get(RabbitBlockFrameInfoDao.class).clone();
        rabbitBlockFrameInfoDaoConfig.initIdentityScope(type);

        rabbitHttpLogInfoDaoConfig = daoConfigMap.get(RabbitHttpLogInfoDao.class).clone();
        rabbitHttpLogInfoDaoConfig.initIdentityScope(type);

        rabbitExceptionInfoDaoConfig = daoConfigMap.get(RabbitExceptionInfoDao.class).clone();
        rabbitExceptionInfoDaoConfig.initIdentityScope(type);

        rabbitBlockFrameInfoDao = new RabbitBlockFrameInfoDao(rabbitBlockFrameInfoDaoConfig, this);
        rabbitHttpLogInfoDao = new RabbitHttpLogInfoDao(rabbitHttpLogInfoDaoConfig, this);
        rabbitExceptionInfoDao = new RabbitExceptionInfoDao(rabbitExceptionInfoDaoConfig, this);

        registerDao(RabbitBlockFrameInfo.class, rabbitBlockFrameInfoDao);
        registerDao(RabbitHttpLogInfo.class, rabbitHttpLogInfoDao);
        registerDao(RabbitExceptionInfo.class, rabbitExceptionInfoDao);
    }
    
    public void clear() {
        rabbitBlockFrameInfoDaoConfig.clearIdentityScope();
        rabbitHttpLogInfoDaoConfig.clearIdentityScope();
        rabbitExceptionInfoDaoConfig.clearIdentityScope();
    }

    public RabbitBlockFrameInfoDao getRabbitBlockFrameInfoDao() {
        return rabbitBlockFrameInfoDao;
    }

    public RabbitHttpLogInfoDao getRabbitHttpLogInfoDao() {
        return rabbitHttpLogInfoDao;
    }

    public RabbitExceptionInfoDao getRabbitExceptionInfoDao() {
        return rabbitExceptionInfoDao;
    }

}
